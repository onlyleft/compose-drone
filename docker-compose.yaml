version: "3.3"

services:
  drone:
    image: drone/drone:2.12.1
    networks:
      - traefik_backend
    volumes:
      - data:/data
    environment:
      - DRONE_GITHUB_CLIENT_ID=$DRONE_GITHUB_CLIENT_ID
      - DRONE_GITHUB_CLIENT_SECRET=$DRONE_GITHUB_CLIENT_SECRET
      - DRONE_RPC_SECRET=$DRONE_RPC_SECRET
      - DRONE_SERVER_HOST=$DRONE_SERVER_HOST
      - DRONE_SERVER_PROTO=$DRONE_SERVER_PROTO
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.drone.rule=Host(`$DRONE_SERVER_HOST`)"
      - "traefik.http.routers.drone.tls=true"
  runner:
    image: drone/drone-runner-docker:1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_GITHUB_CLIENT_ID=$DRONE_GITHUB_CLIENT_ID
      - DRONE_GITHUB_CLIENT_SECRET=$DRONE_GITHUB_CLIENT_SECRET
      - DRONE_RPC_SECRET=$DRONE_RPC_SECRET
      - DRONE_RPC_PROTO=$DRONE_SERVER_PROTO
      - DRONE_RPC_HOST=$DRONE_SERVER_HOST
      - DRONE_RUNNER_CAPACITY=$RUNNER_CAPACITY
      - DRONE_RUNNER_NAME=compose-runner


networks:
  traefik_backend:
    external: true

volumes:
  data:
